{"version":3,"sources":["webpack:///../components/common/placeholder.js","webpack:///../actions/events.js","webpack:///../components/blocks/eventThumb.js","webpack:///../components/pages/band.js","webpack:///../components/common/heading.js","webpack:///../components/common/lazyImage.js","webpack:///../components/common/spin.js","webpack:///../components/common/resultsContainer.js"],"names":["__webpack_require__","_media","InnnerText","styled","span","_templateObject","Container","div","_templateObject2","device","tablet","props","_react2","default","createElement","_api","fetchEvents","bandName","dispatch","type","_nodeFetch2","ARTISTS_URL","API_KEY","cache","then","resp","json","data","error","payload","catch","e","_reactRouterDom","_colors","EventContainer","mobileS","mobileL","laptop","EventName","mainColor","EventDate","_templateObject3","EventCountry","_templateObject4","EventCity","_templateObject5","LinupHeading","_templateObject6","LineupBand","_templateObject7","LineupMore","_templateObject8","_props$venue","venue","name","country","region","city","datetime","latitude","longitude","lineup","description","_moment2","format","length","key","splice","map","band","Link","to","_react","_reactRedux","_band","_events","EventsContainer","Spin","BandWall","image","BandContainer","_styledComponents2","BandThumb","BandDetails","BandTitle","h1","BandButton","Button","BandPage","connect","store","search","favourite","events","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","PureComponent","_this2","preventDefault","pushFavouriteBand","_props","fetched","pending","_container2","className","_placeholder2","_band$data","image_url","thumb_url","facebook_page_url","inFavourites","indexOf","_lazyImage2","width","height","title","href","target","background","color","onClick","toggleFavourite","_heading2","event","_eventThumb2","_extends","nextProps","prevState","match","params","fetchBand","Preloader","LazyImage","src","loaded","Image","updateImage","onload","setState","prevProps","_state","alt","_styledComponents","keyframes"],"mappings":"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","file":"5.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { device } from 'components/variables/media'\n\nconst InnnerText = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n    line-height: 1;\n`\n\nconst Container = styled.div`\n    display: block;\n    text-align: center;\n    color: #9E9E9E;\n    font-size: 2rem;\n    line-height: 160px;\n    padding: 0px 12px;\n    text-align: center;\n    width: 100%;\n    @media ${device.tablet} {\n      font-size: 3rem;\n    }\n`\n\nexport default ( props ) => {\n    return (\n      <Container>\n        <InnnerText { ...props } />\n      </Container>\n    )\n}\n","import { API_KEY, ARTISTS_URL } from 'settings/api'\nimport fetch from 'node-fetch'\n\n// Fetching band's events\nexport const fetchEvents = ( bandName ) => {\n\n    return ( dispatch ) => {\n\n        dispatch( {\n            type: 'EVENTS_PENDING'\n        } )\n\n        return fetch( `${ARTISTS_URL}/${bandName}/events/?app_id=${API_KEY}`, { cache: \"force-cache\" } )\n        .then( ( resp ) => resp.json() )\n        .then( ( data ) => {\n            return ( data && !data.error ) ?\n                dispatch( {\n                    type: 'EVENTS_FULFILLED',\n                    payload: data,\n                } )\n            : dispatch( {\n                type: 'EVENTS_NO_RESULT',\n                payload: null,\n            } )\n        } )\n        .catch( (e ) => {\n            return dispatch( {\n                type: 'EVENTS_REJECTED',\n            } )\n        } )\n    }\n\n}\n","import React from 'react'\nimport LazyImage from 'components/common/lazyImage'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { mainColor } from 'components/variables/colors'\nimport moment from 'moment'\nimport { device } from 'components/variables/media'\n\nconst EventContainer = styled.div`\n    display: block;\n    width: 100%;\n    padding: 12px 12px 40px;\n    background: #080808;\n    min-height: 200px;\n    border-bottom: 1px solid #000;\n    &:nth-child(2n){\n        background: #121212;\n    }\n    &:hover{\n        background: #000000;\n    }\n    @media ${device.mobileS} {\n        width: 100%;\n    }\n    @media ${device.mobileL} {\n        width: 50%;\n    }\n    @media ${device.tablet} {\n        width: 33.333%;\n    }\n    @media ${device.laptop} {\n        width: 25%;\n    }\n`\n\nconst EventName = styled.div`\n    font-size: 2.6rem;\n    color: ${mainColor};\n    margin: 12px 0px;\n    line-height: 3rem;\n    text-transform: uppercase;\n`\n\nconst EventDate = styled.div`\n    display: block;\n    font-size: 1.8rem;\n    color: #E0E0E0;\n    margin: 12px 0px;\n`\n\nconst EventCountry = styled.div`\n    display: block;\n    margin: 12px 0px 6px;\n    color: #9E9E9E;\n    font-size: 1.8rem;\n`\nconst EventCity = styled.div`\n    display: block;\n    margin: 6px 0px 12px;\n    color: #757575;\n    font-size: 1.5rem;\n`\n\nconst LinupHeading = styled.div`\n    display: block;\n    font-size: 1.8rem;\n    margin: 24px 0px 6px;\n    color: #424242;\n`\n\nconst LineupBand = styled.div`\n    display: block;\n    font-size: 1.6rem;\n    line-height: 2rem;\n    > a {\n        color: #9E9E9E;\n        text-decoration: none;\n        &:hover{\n            color: ${mainColor};\n        }\n    }\n`\n\nconst LineupMore = styled.div`\n    display: block;\n    font-size: 1.6rem;\n    line-height: 2rem;\n    color: #757575;\n`\n\nexport default ( props ) => {\n    const { venue: { name, country, region, city, latitude, longitude }, datetime, description, lineup } = props\n    return (\n        <EventContainer>\n            <EventDate>{ moment( datetime ).format('D MMM') }</EventDate>\n            <EventName>{ name }</EventName>\n            <EventCountry>{ country }</EventCountry>\n            <EventCity>{ city }{ ( region ) ? `, ${region}` : null }</EventCity>\n            {\n                ( lineup.length > 1 ) ? (\n                    [\n                        <LinupHeading key={ 0 }>Lineup:</LinupHeading>,\n                        lineup.splice(0, 10).map( ( band, key ) => {\n                            return (\n                                <LineupBand key={ key }>\n                                    <Link to={ `/band/${band}` }>{ band }</Link>\n                                </LineupBand>\n                            )\n                        } ),\n                        ( lineup.length > 10 ) ? <LineupMore>and { lineup.length - 10 } more</LineupMore> : null\n                    ]\n                ) : null\n            }\n        </EventContainer>\n    )\n\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchBand, pushFavouriteBand } from 'actions/band'\nimport { fetchEvents } from 'actions/events'\nimport styled, { keyframes } from 'styled-components'\nimport EventThumb from 'components/blocks/eventThumb'\nimport LazyImage from 'components/common/lazyImage'\nimport Button from 'components/common/button'\nimport Heading from 'components/common/heading'\nimport ResultsContainer from 'components/common/resultsContainer'\nimport Placeholder from 'components/common/placeholder'\nimport Container from 'components/common/container'\nimport Spin from 'components/common/spin'\nimport { mainColor, mainColorDark } from 'components/variables/colors'\nimport { device } from 'components/variables/media'\n\nconst EventsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    border-radius 2px;\n    min-height: 160px;\n    position: relative;\n    margin: 0px -12px;\n    background: #F5F5F5;\n    &.loading:before{\n        display: block;\n        position: absolute;\n        content: '';\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n        animation: ${Spin} 2s linear infinite;\n        border: 6px solid #E0E0E0;\n        border-top: 6px solid ${mainColor};\n        top: 16px;\n        left: 50%;\n        margin-left: -28px;\n    }\n    > span {\n        display: block;\n        width: 100%;\n    }\n`\n\nconst BandWall = styled.div`\n    display: block;\n    padding: 80px 0px;\n    background: ${ ( props ) => ( props.image ) ? `url(${ props.image }) #FAFAFA` : '#FAFAFA' };\n    @media ${device.tablet} {\n        margin-top: -80px;\n    }\n`\n\nconst BandContainer = styled(Container)`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    @media ${device.tablet} {\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n    }\n`\nconst BandThumb = styled.div`\n    display: block;\n    height: 200px;\n    width: 200px;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, .7);\n    order: 1;\n    @media ${device.tablet} {\n        order: 0;\n        width: 200px;\n    }\n`\n\nconst BandDetails = styled.div`\n    display: block;\n    padding: 6px 12px;\n    order: 0;\n    width: 100%;\n    margin-bottom: 24px;\n    @media ${device.tablet} {\n        order: 1;\n        width: auto;\n    }\n`\n\nconst BandTitle = styled.h1`\n    display: block;\n    color: #fff;\n    font-size: 3rem;\n    text-shadow: 0px 1px 1px rgba(0, 0, 0, .7);\n`\n\nconst BandButton = styled(Button)`\n    border-radius: 50%;\n    margin-right: 12px;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, .7);\n    height: 42px;\n    min-width: 42px;\n    line-height: 42px;\n    font-size: 2rem;\n    padding: 0px;\n`\n\n@connect( ( store ) => {\n    return {\n        search: store.search,\n        band: store.band,\n        favourite: store.favourite,\n        events: store.events,\n    }\n} )\n\nexport default class BandPage extends PureComponent {\n\n    constructor ( props ) {\n        super( props )\n\n        this.state = {\n            band: null,\n        }\n\n    }\n\n    toggleFavourite( bandName ) {\n        return ( e ) => {\n            e.preventDefault()\n            this.props.dispatch( pushFavouriteBand( bandName ) )\n        }\n    }\n\n    static getDerivedStateFromProps( nextProps, prevState ) {\n\n        const { band } = nextProps.match.params\n        const prevBand = ( prevState ) ? prevState.band : null\n\n        if ( band !== prevBand ) {\n            nextProps.dispatch( fetchBand( band ) )\n            nextProps.dispatch( fetchEvents( band ) )\n        }\n\n        return {\n            band: band\n        }\n\n    }\n\n    render () {\n\n        const { band, favourite, events } = this.props\n\n        const { fetched, pending } = band\n\n        if ( pending || !band.data ) {\n            return (\n                <Container>\n                    <EventsContainer className={ ( pending ) ? 'loading' : null }>\n                        <Placeholder>{ ( !fetched ) ? 'Loading...' : 'Band not found' }</Placeholder>\n                    </EventsContainer>\n                </Container>\n            )\n        } else {\n\n            const { image_url, thumb_url, name, facebook_page_url } = band.data\n\n            const inFavourites = favourite.indexOf( name ) > -1\n\n            return (\n                <div>\n                    <BandWall image={ image_url }>\n                        <BandContainer>\n                            <BandThumb>\n                                <LazyImage width={ 200 } height={ 200 } image={ thumb_url } title={ name } />\n                            </BandThumb>\n                            <BandDetails>\n                                <BandTitle>{ name }</BandTitle>\n                                { ( facebook_page_url ) ? (\n                                    <a href={ facebook_page_url } target='_blank'>\n                                        <BandButton type='button' background='#ffffff' color={ mainColor }>\n                                            <i className='icon icon-facebook' />\n                                        </BandButton>\n                                    </a>\n                                ) : null }\n                                <BandButton\n                                    type='button' background={ ( inFavourites ) ? mainColor : '#ffffff' } color={ ( inFavourites ) ? '#ffffff' : mainColor }\n                                    onClick={ this.toggleFavourite( name ) }\n                                >\n                                    <i className='icon icon-heart' />\n                                </BandButton>\n                            </BandDetails>\n                        </BandContainer>\n                    </BandWall>\n                    <Container>\n                        <Heading>Events</Heading>\n                        <EventsContainer className={ ( events.pending ) ? 'loading' : null }>\n                            {\n                                ( events.fetched && events.data.length ) ? (\n                                    events.data.map( ( event, key ) => {\n                                        return <EventThumb { ...event } key={ key } />\n                                    } )\n                                ) : (\n                                    <Placeholder>{ ( !events.fetched ) ? 'Loading...' : 'No events found' }</Placeholder>\n                                )\n                            }\n                        </EventsContainer>\n                    </Container>\n                </div>\n            )\n        }\n    }\n\n}\n","import styled from 'styled-components'\nimport { device } from 'components/variables/media'\n\nexport default styled.h1`\n    font-size: 2rem;\n    font-weight: normal;\n    margin: 24px 0px;\n    @media ${device.tablet} {\n      font-size: 3rem;\n      margin: 32px 0px;\n    }\n`\n","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\n\nconst Preloader = styled.div`\n    display: block;\n    height: ${ props => ( props.height ) ? `${props.height}px` : '100px' };\n    width: ${ props => ( props.width ) ? `${props.width}px` : '100px' };\n    background: #E0E0E0;\n    display: inline-block;\n    vertical-align: middle;\n    > img {\n        position: relative;\n        max-width: 100%;\n        max-height: 100%;\n    }\n`\n\nexport default class LazyImage extends PureComponent {\n\n    constructor ( props ) {\n\n        super( props )\n\n        const { src } = props\n\n        this.state = {\n            loaded: false,\n            src: null,\n        }\n\n        this.Image = null\n\n\n\n    }\n\n    componentDidMount () {\n\n        const { image } = this.props\n        this.updateImage( image )\n\n    }\n\n    updateImage( src ) {\n\n        this.Image = new Image()\n        this.Image.onload = ( e ) => {\n            this.setState( {\n                loaded: true,\n                src: src,\n            } )\n        }\n        return this.Image.src = src\n\n    }\n\n    componentWillUnmount () {\n        this.Image.onload = null\n    }\n\n    componentDidUpdate( prevProps, prevState ) {\n\n        const { image } = this.props\n        if ( prevProps.image !== image ) {\n            this.updateImage( image )\n        }\n\n    }\n\n    render () {\n\n        const title = this.props.title || ''\n        const { loaded, src } = this.state\n\n        return (\n            <Preloader { ...this.props }>\n                { ( loaded ) ? <img src={ src } alt={ title } title={ title } /> : null }\n            </Preloader>\n        )\n    }\n\n}\n","import { keyframes } from 'styled-components'\n\nexport default keyframes`\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n`\n","import styled from 'styled-components'\nimport Spin from 'components/common/spin'\nimport { mainColor } from 'components/variables/colors'\nimport { device } from 'components/variables/media'\n\nexport default styled.div`\n    display: block;\n    border: 1px solid #e0e0e0;\n    border-radius 2px;\n    min-height: 160px;\n    position: relative;\n    margin: 32px 0px;\n    &.loading:before{\n        display: block;\n        position: absolute;\n        content: '';\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n        animation: ${Spin} 2s linear infinite;\n        border: 6px solid #E0E0E0;\n        border-top: 6px solid ${mainColor};\n        top: 16px;\n        left: 50%;\n        margin-left: -28px;\n    }\n    @media ${device.tablet} {\n      margin: 60px 0px;\n    }\n`\n"],"sourceRoot":""}
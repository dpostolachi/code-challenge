{"version":3,"sources":["webpack:///../actions/search.js","webpack:///../components/pages/search.js"],"names":["searchBand","bandName","dispatch","type","ARTISTS_URL","API_KEY","cache","then","resp","json","data","error","payload","catch","e","SearchPage","store","search","props","state","query","band","pending","history","fetched","params","nextProps","prevState","newQuery","getParams","location","thisQuery","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,kCAAa,SAAbA,UAAa,CAAEC,QAAF,EAAgB;;AAEtC,WAAO,UAAEC,QAAF,EAAgB;;AAEnBA,iBAAU;AACNC,kBAAM;AADA,SAAV;;AAIA,eAAO,yBAAUC,gBAAV,SAAyBH,QAAzB,gBAA4CI,YAA5C,EAAuD,EAAEC,OAAO,aAAT,EAAvD,EACNC,IADM,CACA,UAAEC,IAAF;AAAA,mBAAYA,KAAKC,IAAL,EAAZ;AAAA,SADA,EAENF,IAFM,CAEA,UAAEG,IAAF,EAAY;AACf,mBAASA,QAAQ,CAACA,KAAKC,KAAhB,GACHT,SAAU;AACNC,sBAAM,kBADA;AAENS,yBAASF;AAFH,aAAV,CADG,GAKLR,SAAU;AACRC,sBAAM,kBADE;AAERS,yBAAS;AAFD,aAAV,CALF;AASH,SAZM,EAaNC,KAbM,CAaC,UAACC,CAAD,EAAQ;AACZ,mBAAOZ,SAAU;AACbC,sBAAM;AADO,aAAV,CAAP;AAGH,SAjBM,CAAP;AAkBH,KAxBD;AA0BH,CA5BM,C;;;;;;;;;;;;;;;;;;;;;;;ACHP;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAIqBY,U,WAFpB,yBAAS,UAAEC,KAAF;AAAA,WAAaA,MAAMC,MAAnB;AAAA,CAAT,C;;;AAIG,wBAAcC,KAAd,EAAsB;AAAA;;AAAA,4HAEXA,KAFW;;AAIlB,cAAKC,KAAL,GAAa;AACTC,mBAAO;AADE,SAAb;;AAJkB;AAQrB;;;;iCAwBS;AAAA,gBAEEA,KAFF,GAEY,KAAKD,KAFjB,CAEEC,KAFF;AAAA,yBAGsC,KAAKF,KAH3C;AAAA,gBAGEG,IAHF,UAGEA,IAHF;AAAA,gBAGQC,OAHR,UAGQA,OAHR;AAAA,gBAGiBC,OAHjB,UAGiBA,OAHjB;AAAA,gBAG0BC,OAH1B,UAG0BA,OAH1B;;AAIN,mBACI;AAAC,mCAAD;AAAA;AACI,8CAAC,oBAAD,IAAY,SAAUD,OAAtB,EAAgC,OAAQH,KAAxC,GADJ;AAEI;AAAC,qCAAD;AAAA;AAAA;AAA8BA,yBAA9B;AAAA;AAAA,iBAFJ;AAGI;AAAC,8CAAD;AAAA,sBAAkB,WAAcE,OAAF,GAAc,SAAd,GAA0B,IAAxD;AAEUE,+BAAWH,IAAb,GACI,8BAAC,mBAAD,EAAgBA,IAAhB,CADJ,GAGI;AAAC,6CAAD;AAAA;AAAiBC,+BAAF,GAAc,YAAd,GAA6B;AAA5C;AALZ;AAHJ,aADJ;AAeH;;;kCAzCkBL,M,EAAS;;AAExB,gBAAMQ,SAAS,wBAAOR,MAAP,CAAf;;AAEA,mBAAO;AACHG,uBAAOK,OAAOL,KAAP,IAAgB;AADpB,aAAP;AAIH;;;iDAEgCM,S,EAAWC,S,EAAY;AACpD,gBAAMC,WAAWb,WAAWc,SAAX,CAAsBH,UAAUI,QAAV,CAAmBb,MAAzC,EAAkDG,KAAnE;AACA,gBAAMW,YAAcJ,SAAF,GAAgBA,UAAUP,KAA1B,GAAkC,IAApD;;AAEA,gBAAKQ,aAAaG,SAAlB,EAA8B;AAC1BL,0BAAUxB,QAAV,CAAoB,wBAAY0B,QAAZ,CAApB;AACH;AACD,mBAAO;AACHR,uBAAOQ;AADJ,aAAP;AAGH;;;;EAhCmCI,oB;kBAAnBjB,U","file":"2.js","sourcesContent":["import { API_KEY, ARTISTS_URL } from 'settings/api'\nimport fetch from 'node-fetch'\n\nexport const searchBand = ( bandName ) => {\n\n    return ( dispatch ) => {\n\n        dispatch( {\n            type: 'SEARCH_PENDING'\n        } )\n\n        return fetch( `${ARTISTS_URL}/${bandName}?app_id=${API_KEY}`, { cache: \"force-cache\" } )\n        .then( ( resp ) => resp.json() )\n        .then( ( data ) => {\n            return ( data && !data.error ) ?\n                dispatch( {\n                    type: 'SEARCH_FULFILLED',\n                    payload: data,\n                } )\n            : dispatch( {\n                type: 'SEARCH_NO_RESULT',\n                payload: null,\n            } )\n        } )\n        .catch( (e ) => {\n            return dispatch( {\n                type: 'SEARCH_REJECTED',\n            } )\n        } )\n    }\n\n}\n","import React, { PureComponent } from 'react'\nimport Container from 'components/common/container'\nimport Heading from 'components/common/heading'\nimport { parse } from 'query-string'\nimport { searchBand } from 'actions/search'\nimport { connect } from 'react-redux'\nimport LazyImage from 'components/common/lazyImage'\nimport BandThumb from 'components/blocks/bandThumb'\nimport styled, { keyframes } from 'styled-components'\nimport { mainColor } from 'components/variables/colors'\nimport SearchForm from 'components/controls/searchForm'\nimport ResultsContainer from 'components/common/resultsContainer'\nimport Placeholder from 'components/common/placeholder'\n\n@connect( ( store ) => store.search )\n\nexport default class SearchPage extends PureComponent {\n\n    constructor ( props ) {\n\n        super( props )\n\n        this.state = {\n            query: null,\n        }\n\n    }\n\n    static getParams ( search ) {\n\n        const params = parse( search )\n\n        return {\n            query: params.query || ''\n        }\n\n    }\n\n    static getDerivedStateFromProps( nextProps, prevState ) {\n        const newQuery = SearchPage.getParams( nextProps.location.search ).query\n        const thisQuery = ( prevState ) ? prevState.query : null\n\n        if ( newQuery !== thisQuery ) {\n            nextProps.dispatch( searchBand( newQuery ) )\n        }\n        return {\n            query: newQuery\n        }\n    }\n\n    render () {\n\n        const { query } = this.state\n        const { band, pending, history, fetched } = this.props\n        return (\n            <Container>\n                <SearchForm history={ history } query={ query } />\n                <Heading>Search result for \"{ query }\"</Heading>\n                <ResultsContainer className={ ( pending ) ? 'loading' : null }>\n                    {\n                        ( fetched && band ) ? (\n                            <BandThumb { ...band } />\n                        ) : (\n                            <Placeholder>{ ( pending ) ? 'Loading...' : 'No band found' }</Placeholder>\n                        )\n                    }\n                </ResultsContainer>\n            </Container>\n        )\n    }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///../actions/favouriteBands.js","webpack:///../components/pages/favourites.js"],"names":["fetchFavouriteBands","bandNames","dispatch","type","Promise","all","map","bandName","resolve","reject","ARTISTS_URL","API_KEY","cache","then","resp","json","data","error","catch","e","bands","payload","SearchPage","store","favouriteBands","favourite","props","state","fetched","pending","length","band","key","nextProps","prevState","console","log","prevBands","toString","PureComponent"],"mappings":"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","file":"3.js","sourcesContent":["import { API_KEY, ARTISTS_URL } from 'settings/api'\nimport fetch from 'node-fetch'\n\nexport const fetchFavouriteBands = ( bandNames ) => {\n\n    return ( dispatch ) => {\n\n        dispatch( {\n            type: 'FAVOURITE_BANDS_PENDING',\n        } )\n\n        return Promise.all( bandNames.map( ( bandName ) => {\n\n            return new Promise( ( resolve, reject ) => {\n\n                return fetch( `${ARTISTS_URL}/${bandName}?app_id=${API_KEY}`, { cache: \"force-cache\" } )\n                .then( ( resp ) => resp.json() )\n                .then( ( data ) => {\n                    if ( data && !data.error ){\n                        return resolve( data )\n                    } else {\n                        return reject( data.error )\n                    }\n                } )\n                .catch( ( e ) => {\n                    return reject( e )\n                } )\n\n            } )\n\n        } ) )\n        .then( ( bands ) => {\n            if ( bands ) {\n                return dispatch( {\n                    type: 'FAVOURITE_BANDS_FULFILLED',\n                    payload: bands,\n                } )\n            } else {\n                return dispatch( {\n                    type: 'FAVOURITE_BANDS_NO_RESULT',\n                    payload: bands,\n                } )\n            }\n\n        } )\n        .catch( () => {\n            return dispatch( {\n                type: 'FAVOURITE_BANDS_REJECTED',\n            } )\n        } )\n\n    }\n\n}\n","import React, { PureComponent } from 'react'\nimport Container from 'components/common/container'\nimport Heading from 'components/common/heading'\nimport { parse } from 'query-string'\nimport { fetchFavouriteBands } from 'actions/favouriteBands'\nimport { connect } from 'react-redux'\nimport LazyImage from 'components/common/lazyImage'\nimport BandThumb from 'components/blocks/bandThumb'\nimport styled, { keyframes } from 'styled-components'\nimport { mainColor } from 'components/variables/colors'\nimport SearchForm from 'components/controls/searchForm'\nimport ResultsContainer from 'components/common/resultsContainer'\nimport Placeholder from 'components/common/placeholder'\n\n@connect( ( store ) => {\n    return {\n        favouriteBands: store.favouriteBands,\n        favourite: store.favourite,\n    }\n} )\n\nexport default class SearchPage extends PureComponent {\n\n    constructor ( props ) {\n\n        super( props )\n\n        this.state = {\n            bands: [],\n        }\n\n    }\n\n    static getDerivedStateFromProps( nextProps, prevState ) {\n        console.log( nextProps )\n        const { favourite } = nextProps\n        const prevBands = ( prevState ) ? prevState.bands : []\n\n        if ( favourite.toString() !== prevBands.toString() ) {\n            nextProps.dispatch( fetchFavouriteBands( favourite ) )\n        }\n        return {\n            bands: favourite\n        }\n    }\n\n    render () {\n\n        const { fetched, pending, data } = this.props.favouriteBands\n        const { favourite } = this.props\n\n        return (\n            <Container>\n                <Heading>Favourite bands</Heading>\n                <ResultsContainer className={ ( pending ) ? 'loading' : null }>\n                    { ( favourite.length === 0 ) ? <Placeholder>You have no favourite bands, yet</Placeholder> : null  }\n                    {\n                        ( fetched && data ) ? (\n                            data.map( ( band, key ) => {\n                                return <BandThumb { ...band } key={ key } />\n                            } )\n                        ) : (\n                            <Placeholder>{ ( pending ) ? 'Loading...' : 'No events found' }</Placeholder>\n                        )\n                    }\n                </ResultsContainer>\n            </Container>\n        )\n    }\n}\n"],"sourceRoot":""}